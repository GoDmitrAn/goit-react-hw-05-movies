{"version":3,"file":"static/js/368.b746e1b1.chunk.js","mappings":"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","sources":["components/TrendMovies/TrendMovies.jsx","components/TrendMovies/TrendMovies.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\n// import { fetchTrendFilms } from './Axios';\nimport axios from 'axios';\nimport { MovieGallery, MovieGalleryItem } from './TrendMovies.styled';\nimport { useLocation } from 'react-router-dom';\nconst TREND_FILMS_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const TrendMovies = () => {\n  const location = useLocation();\n  const [trendMovies, setTrendMovies] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchTrendFilms() {\n      try {\n        const response = await axios(TREND_FILMS_URL, {\n          signal: controller.signal,\n          params: {\n            api_key: process.env.REACT_APP_API_KEY,\n          },\n        });\n        setTrendMovies(response.data.results);\n        setError(null);\n      } catch (error) {\n        console.log(error);\n        setError('Sorry, please reload');\n      }\n    }\n    fetchTrendFilms();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  return (\n    <div>\n      {(trendMovies.length > 0 && (\n        <MovieGallery>\n          {trendMovies.map(movie => {\n            return (\n              <MovieGalleryItem\n                to={`movies/${movie.id}`}\n                key={movie.id}\n                state={{ from: location }}\n              >\n                <img\n                  src={BASE_IMAGE_URL + movie.poster_path}\n                  alt={movie.title}\n                  loading=\"lazy\"\n                />\n                <h2>{movie.title}</h2>\n              </MovieGalleryItem>\n            );\n          })}\n        </MovieGallery>\n      )) ||\n        (error && <div>{error}</div>)}\n    </div>\n  );\n};\nexport { BASE_IMAGE_URL };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  padding-left: 0;\n  margin-left: 0;\n  width: 100%;\n`;\nexport const MovieGalleryItem = styled(Link)`\n  display: block;\n  background-color: #f1f2f1;\n  text-align: center;\n  flex-basis: 280px;\n  text-decoration: none;\n  & img {\n    max-width: 100%;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #2e2e2e;\n`;\nexport const PosterWrapp = styled.div`\n  flex: 2;\n  & img {\n    max-width: 100%;\n  }\n`;\nexport const InfoTitle = styled.span`\n  font-weight: bold;\n  font-size: 18px;\n`;\nexport const DescriptionMovie = styled.div`\n  padding: 10px 20px;\n  flex: 7;\n`;\nexport const InformationBox = styled.div`\n  border-bottom: 1px solid #2e2e2e;\n  margin-top: 10px;\n  & ul {\n  }\n  & h3 {\n    margin-top: 0;\n    margin-bottom: 10px;\n  }\n`;\nexport const ToBack = styled(Link)`\n  display: block;\n  width: 60px;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  background-color: aliceblue;\n  font-weight: 500;\n  border: 1px solid #2e2e2e;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  &:hover {\n    background-color: antiquewhite;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  DescriptionMovie,\n  InformationBox,\n  InfoTitle,\n  MovieWrapper,\n  PosterWrapp,\n} from './MovieInfo.styled';\nimport { BASE_IMAGE_URL } from '../TrendMovies/TrendMovies';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nexport const MovieInfo = ({ movie }) => {\n  const { poster_path, title, popularity, overview, release_date, genres } =\n    movie;\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieWrapper>\n        <PosterWrapp>\n          <img src={BASE_IMAGE_URL + poster_path} alt={title} loading=\"lazy\" />\n        </PosterWrapp>\n        <DescriptionMovie>\n          <h2>{title}</h2>\n          <p>\n            <InfoTitle>Release : </InfoTitle>\n            {release_date}\n          </p>\n          <p>\n            <InfoTitle>Popularity :</InfoTitle> {popularity}\n          </p>\n          <p>\n            <InfoTitle>Genres : </InfoTitle>\n            {genres.map(genre => genre.name).join(', ')}\n          </p>\n          <p>\n            <InfoTitle>Overview :</InfoTitle> {overview}\n          </p>\n        </DescriptionMovie>\n      </MovieWrapper>\n      <InformationBox>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </InformationBox>\n      <Outlet />\n    </>\n  );\n};\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import axios from 'axios';\n\nimport { useLocation, useParams } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { ToBack } from 'components/MovieInfo/MovieInfo.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getMovieById(id) {\n      try {\n        const response = await axios(\n          `https://api.themoviedb.org/3/movie/${id}`,\n          {\n            signal: controller.signal,\n            params: {\n              api_key: process.env.REACT_APP_API_KEY,\n            },\n          }\n        );\n        setMovie(response.data);\n      } catch (error) {}\n    }\n    getMovieById(movieId);\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n  return (\n    <main>\n      <ToBack to={backLinkHref}>Go Back</ToBack>\n      {movie && <MovieInfo movie={movie} />}\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["TREND_FILMS_URL","BASE_IMAGE_URL","TrendMovies","location","useLocation","useState","trendMovies","setTrendMovies","error","setError","useEffect","controller","AbortController","axios","signal","params","api_key","process","response","data","results","console","log","fetchTrendFilms","abort","length","map","movie","to","id","state","from","src","poster_path","alt","title","loading","MovieGallery","styled","MovieGalleryItem","Link","MovieWrapper","PosterWrapp","InfoTitle","DescriptionMovie","InformationBox","ToBack","MovieInfo","popularity","overview","release_date","genres","genre","name","join","backLinkHref","movieId","useParams","setMovie","getMovieById"],"sourceRoot":""}