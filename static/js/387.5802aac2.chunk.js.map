{"version":3,"file":"static/js/387.5802aac2.chunk.js","mappings":"gQACaA,E,OAAcC,EAAAA,GAAH,sB,SCmDxB,EAhDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,MAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KA2BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,WAA8BC,GAA9B,iGAE2BC,EAAAA,EAAAA,IAAM,sCAAD,OACYD,EADZ,YAE1B,CACEE,OAAQJ,EAAWI,OACnBC,OAAQ,CACNC,QAASC,sCAPnB,UAWyC,KAT/BC,EAFV,QAWiBC,KAAKC,QAAQC,OAX9B,uBAYMb,EAAc,qBAZpB,0BAeIF,EAAWY,EAASC,KAAKC,SAf7B,6GAFc,sBAqBd,OArBc,oCAoBdE,CAAepB,GACR,WACLQ,EAAWa,QACXjB,EAAW,KACZ,CACF,GAAE,CAACJ,KAEF,+BACGG,IACC,SAACL,EAAD,UACGK,EAAQmB,KAAI,SAAAC,GACX,OACE,2BACE,0BAAKA,EAAKC,OAAV,SACA,uBAAID,EAAKE,YAFFF,EAAKb,GAKjB,MAGJL,IAAc,uBAAIA,MAGxB,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const ReviewsList = styled.ul``;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from './Reviews.styled';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [reviewsErr, setReviewsErr] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getReviewsById(id) {\n      try {\n        const response = await axios(\n          `https://api.themoviedb.org/3/movie/${id}/reviews`,\n          {\n            signal: controller.signal,\n            params: {\n              api_key: process.env.REACT_APP_API_KEY,\n            },\n          }\n        );\n        if (response.data.results.length === 0) {\n          setReviewsErr('Sorry, no reviews');\n          return;\n        }\n        setReviews(response.data.results);\n      } catch (error) {}\n    }\n    getReviewsById(movieId);\n    return () => {\n      controller.abort();\n      setReviews(null);\n    };\n  }, [movieId]);\n  return (\n    <section>\n      {reviews && (\n        <ReviewsList>\n          {reviews.map(item => {\n            return (\n              <li key={item.id}>\n                <h3>{item.author} :</h3>\n                <p>{item.content}</p>\n              </li>\n            );\n          })}\n        </ReviewsList>\n      )}\n      {reviewsErr && <p>{reviewsErr}</p>}\n    </section>\n  );\n};\nexport default Reviews;\n"],"names":["ReviewsList","styled","movieId","useParams","useState","reviews","setReviews","reviewsErr","setReviewsErr","useEffect","controller","AbortController","id","axios","signal","params","api_key","process","response","data","results","length","getReviewsById","abort","map","item","author","content"],"sourceRoot":""}