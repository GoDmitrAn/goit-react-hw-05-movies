{"version":3,"file":"static/js/6.d6a34d73.chunk.js","mappings":"+QAMMA,EAAkB,mDAClBC,EAAiB,kCAEVC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAuBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,8GAE2BC,EAAAA,EAAAA,IAAMb,EAAiB,CAC5Cc,OAAQH,EAAWG,OACnBC,OAAQ,CACNC,QAASC,sCALjB,OAEUC,EAFV,OAQIX,EAAeW,EAASC,KAAKC,SAC7BX,EAAS,MATb,gDAWIY,QAAQC,IAAR,MACAb,EAAS,wBAZb,0DAFc,sBAkBd,OAlBc,mCAiBdc,GACO,WACLZ,EAAWa,OACZ,CACF,GAAE,KAED,yBACIlB,EAAYmB,OAAS,IACrB,SAAC,IAAD,UACGnB,EAAYoB,KAAI,SAAAC,GACf,OACE,UAAC,IAAD,CACEC,GAAE,iBAAYD,EAAME,IAEpBC,MAAO,CAAEC,KAAM5B,GAHjB,WAKE,gBACE6B,IAAK/B,EAAiB0B,EAAMM,YAC5BC,IAAKP,EAAMQ,MACXC,QAAQ,UAEV,wBAAKT,EAAMQ,UARNR,EAAME,GAWhB,OAGFrB,IAAS,yBAAMA,KAGvB,C,gHC1DY6B,EAAeC,EAAAA,EAAAA,GAAH,mIAQZC,GAAmBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qL,0HCThBG,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAM1B,OACE,+BACE,kBAAMC,SAPW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfL,EAAiBI,EAAKE,SAASC,WAAWC,MAC3C,EAGG,WACE,kBAAOC,KAAK,OAAOC,KAAK,gBACxB,mBAAQD,KAAK,SAAb,wBAIP,E,6CC2DD,EA9De,WAAO,IAAD,EACnB,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,qBAApB,QAAqC,GACrD,GAA4CpD,EAAAA,EAAAA,UAAS,IAArD,eAAOqD,EAAP,KAAuBC,EAAvB,KACMxD,GAAWC,EAAAA,EAAAA,MAgCjB,OA5BAM,EAAAA,EAAAA,YAAU,WACR,GAAmB,KAAf8C,EAAJ,CAIA,IAAM7C,EAAa,IAAIC,gBAmBvB,OAxBc,mCAuBdgD,GACO,WACLjD,EAAWa,OACZ,CAtBA,CAJa,wCAMd,8GAE2BX,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQH,EAAWG,OACnBC,OAAQ,CACNC,QAASC,mCACT4C,MAAOL,KARjB,OAEUM,EAFV,OAYIH,EAAkBG,EAAS3C,KAAKC,SAZpC,gDAcIC,QAAQC,IAAR,MAdJ,0DANc,sBAEZqC,EAAkB,GAyBrB,GAAE,CAACH,KAEF,6BACE,SAACf,EAAD,CAAWC,iBAjCM,SAAAvB,GACnBoC,EAAgB,CAAEN,WAAY9B,GAC/B,IAgCIuC,EAAejC,OAAS,IACvB,SAAC,IAAD,UACGiC,EAAehC,KAAI,SAAAC,GAClB,OACE,UAAC,IAAD,CACEC,GAAE,UAAKD,EAAME,IAEbC,MAAO,CAAEC,KAAM5B,GAHjB,WAKE,gBACE6B,IAAK/B,EAAAA,EAAiB0B,EAAMM,YAC5BC,IAAKP,EAAMQ,MACXC,QAAQ,UAEV,wBAAKT,EAAMQ,UARNR,EAAME,GAWhB,QAKV,C","sources":["components/TrendMovies/TrendMovies.jsx","components/TrendMovies/TrendMovies.styled.jsx","components/SearchBox.jsx/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\n// import { fetchTrendFilms } from './Axios';\nimport axios from 'axios';\nimport { MovieGallery, MovieGalleryItem } from './TrendMovies.styled';\nimport { useLocation } from 'react-router-dom';\nconst TREND_FILMS_URL = 'https://api.themoviedb.org/3/trending/movie/week';\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const TrendMovies = () => {\n  const location = useLocation();\n  const [trendMovies, setTrendMovies] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchTrendFilms() {\n      try {\n        const response = await axios(TREND_FILMS_URL, {\n          signal: controller.signal,\n          params: {\n            api_key: process.env.REACT_APP_API_KEY,\n          },\n        });\n        setTrendMovies(response.data.results);\n        setError(null);\n      } catch (error) {\n        console.log(error);\n        setError('Sorry, please reload');\n      }\n    }\n    fetchTrendFilms();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n  return (\n    <div>\n      {(trendMovies.length > 0 && (\n        <MovieGallery>\n          {trendMovies.map(movie => {\n            return (\n              <MovieGalleryItem\n                to={`movies/${movie.id}`}\n                key={movie.id}\n                state={{ from: location }}\n              >\n                <img\n                  src={BASE_IMAGE_URL + movie.poster_path}\n                  alt={movie.title}\n                  loading=\"lazy\"\n                />\n                <h2>{movie.title}</h2>\n              </MovieGalleryItem>\n            );\n          })}\n        </MovieGallery>\n      )) ||\n        (error && <div>{error}</div>)}\n    </div>\n  );\n};\nexport { BASE_IMAGE_URL };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  padding-left: 0;\n  margin-left: 0;\n  width: 100%;\n`;\nexport const MovieGalleryItem = styled(Link)`\n  display: block;\n  background-color: #f1f2f1;\n  text-align: center;\n  flex-basis: 280px;\n  text-decoration: none;\n  & img {\n    max-width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nexport const SearchBox = ({ userHandleSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    userHandleSubmit(form.elements.usersearch.value);\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"usersearch\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\nSearchBox.propTypes = {\n  userHandleSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\nimport { SearchBox } from 'components/SearchBox.jsx/SearchBox';\nimport { BASE_IMAGE_URL } from 'components/TrendMovies/TrendMovies';\nimport {\n  MovieGallery,\n  MovieGalleryItem,\n} from 'components/TrendMovies/TrendMovies.styled';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userSearch = searchParams.get('usersearch') ?? '';\n  const [userSearchList, setUserSearchList] = useState([]);\n  const location = useLocation();\n  const handleSubmit = data => {\n    setSearchParams({ usersearch: data });\n  };\n  useEffect(() => {\n    if (userSearch === '') {\n      setUserSearchList([]);\n      return;\n    }\n    const controller = new AbortController();\n    async function fetchMoviesList() {\n      try {\n        const responce = await axios(\n          'https://api.themoviedb.org/3/search/movie',\n          {\n            signal: controller.signal,\n            params: {\n              api_key: process.env.REACT_APP_API_KEY,\n              query: userSearch,\n            },\n          }\n        );\n        setUserSearchList(responce.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMoviesList();\n    return () => {\n      controller.abort();\n    };\n  }, [userSearch]);\n  return (\n    <main>\n      <SearchBox userHandleSubmit={handleSubmit} />\n      {userSearchList.length > 0 && (\n        <MovieGallery>\n          {userSearchList.map(movie => {\n            return (\n              <MovieGalleryItem\n                to={`${movie.id}`}\n                key={movie.id}\n                state={{ from: location }}\n              >\n                <img\n                  src={BASE_IMAGE_URL + movie.poster_path}\n                  alt={movie.title}\n                  loading=\"lazy\"\n                />\n                <h2>{movie.title}</h2>\n              </MovieGalleryItem>\n            );\n          })}\n        </MovieGallery>\n      )}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["TREND_FILMS_URL","BASE_IMAGE_URL","TrendMovies","location","useLocation","useState","trendMovies","setTrendMovies","error","setError","useEffect","controller","AbortController","axios","signal","params","api_key","process","response","data","results","console","log","fetchTrendFilms","abort","length","map","movie","to","id","state","from","src","poster_path","alt","title","loading","MovieGallery","styled","MovieGalleryItem","Link","SearchBox","userHandleSubmit","onSubmit","e","preventDefault","form","currentTarget","elements","usersearch","value","type","name","useSearchParams","searchParams","setSearchParams","userSearch","get","userSearchList","setUserSearchList","fetchMoviesList","query","responce"],"sourceRoot":""}